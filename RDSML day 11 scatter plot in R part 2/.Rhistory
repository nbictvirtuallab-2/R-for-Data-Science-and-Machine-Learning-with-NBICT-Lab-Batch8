7+6
8+6
data=c(12,13,17,19)
data=c(12,13,17,19)
sum(data)
a = 22
b = 2.2
class(a)
a = 22
b = 2.2
class(a)
x = "Jannatoul Ferdous"
class(x)
c = "22"
print(c)
c = "22"
print(c+9)
c = 22
print(c+9)
a > b
class(a > b)
y = 19
z = 22-3
print(y == z)
y = 19
z = 22-3
print(y != z)
x = 0
y = 1
print(x && y)
x = 0
y = 0
print(x && y)
x = 1
y = 0
print(x && y)
x = 1
y = 0
print(x || y)
# && and operator
x = 0
x = 0
y = 0
print(x || y)
print(x && y)
x = 11 / 5
print(x)
x = 11 %% 5
print(x)
x = 11 %/% 5
print(x)
setwd("I:/code/R-for-SML-Data-Science-and-Machine-Learning-with-Batch8/RDSML day 9 descriptive stat part 2")
install.packages("psych")Add commentMore actions
install.packages("psych")
library(psych)
detach("package:psych", unload = TRUE)
# descriptive statistics using psych package
library("psych")
data()
AirPassengers
BOD
#using the new York airport flight data
install.packages("nycfligts13")
install.packages("nycfligts13")
install.packages("nycfligts13")
install.packages("nycflights13")
attach(nycflights13 :: flights)
head(nycflights13 ::flights)
summary(distance)
describe(distance)
shanto_pagol=cbind(arrival_delay,dep_delay,distance)
install.packages("psych")
library(psych)
detach("package:psych", unload = TRUE)
# descriptive statistics using psych package
library("psych")
data()
AirPassengers
BOD
#using the new York airport flight data
install.packages("nycfligts13")
install.packages("nycfligts13")
install.packages("nycfligts13")
install.packages("nycflights13")
attach(nycflights13 :: flights)
head(nycflights13 ::flights)
summary(distance)
describe(distance)
shanto_pagol=cbind(arr_delay,dep_delay,distance)
summary(shanto_pagol)
describe(shanto_pagol)
#introducing the colnames() function
colnames(shanto_pagol)=c("arriva_delay","departure_delay","dist","distance travelled")
#introducing the colnames() function
pacolnames(shanto_pagol)=c("arriva_delay","departure_delay","distance travelled")
#introducing the colnames() function
pacolnames(shanto_pagol)=c("arriva_delay","departure_delay","distance_travelled")
#introducing the colnames() function
colnames(shanto_pagol)=c("arriva_delay","departure_delay","distance_travelled")
describe(shanto_pagol)
install.packages("psych")
library(psych)
describe(shanto_pagol)
#introducing the hist function
hist(arriva_delay)
#introducing the hist function
hist(arr_delay)
shanto_pagol=cbind(arr_delay,dep_delay,distance)
#introducing the hist function
hist(dep_delay)
install.packages("nycfligts13")
attach(nycflights13 :: flights)
head(nycflights13 ::flights)
summary(distance)
describe(distance)
hist(dep_delay)
#how to group des stat
head(nycflights13 :: flights)
summary(carrier)
carrierfact=factor(carrier)
carrier
#two levels of aggregation
aggregate(distance,by=list(carrier,month), FUN = mean, na.rm = TRUE)
#two levels of aggregation
aggregate(distance,by=list(carrier,month), FUN = sd, na.rm = TRUE)
setwd("I:/code/R-for-SML-Data-Science-and-Machine-Learning-with-Batch8/RDSML DAY 10 scatter plot in R p1")
install.packages("ggplot2")
library("ggplot2")
library(ggplot2)
dataset=mtcars
View(dataset)
#generating a basic scatter plot
ggplot(dataset,aes(x=wt,y=mpg))
#generating a basic scatter plot
ggplot(dataset,aes(x=wt,y=mpg)) +
GeomPoint()
#generating a basic scatter plot
ggplot(dataset,aes(x=wt,y=mpg)) +
geomPoint()
#generating a basic scatter plot
ggplot(dataset,aes(x=wt,y=mpg)) +
geompoint()
#generating a basic scatter plot
ggplot(dataset,aes(x=wt,y=mpg)) +
geompoint()
ggplot(dataset,aes(x=wt,y=mpg)) +
geompoint()
ggplot(dataset,aes(x=wt,y=mpg)) +
geompoint()
#generating a basic scatter plot
ggplot(dataset,aes(x=wt,y=mpg)) +
geom_point()
ggplot(dataset,aes(x = wt,y = mpg)) +
geom_point()
#generating a basic scatter plot
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point()
install.packages("graphics")
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point()
dataset=mtcars
#generating a basic scatter plot
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point()
#generating a basic scatter plot
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1,shape=18)
#generating a basic scatter plot
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point(size=1,shape=18)
#generating a basic scatter plot
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1,shape=18)
#generating a basic scatter plot
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point()
#generating a basic scatter plot
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point()
library(ggplot2)
dataset=mtcars
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point()
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=2,shape=2)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=3,shape=3)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=4,shape=4)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1,shape=4)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1,shape=5)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1,shape=50)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1,shape=18)
setwd("I:/code/R-for-SML-Data-Science-and-Machine-Learning-with-Batch8/RDSML day 11 scatter plot in R part 2")
#adding the regression line
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1,shape=18) +
geom_smooth(method = lm)
#removing the confidence interval
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1,shape=18) +
geom_smooth(method = lm, se = FALSE)
#loess method
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1,shape=18) +
geom_smooth()
#loess method
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1,shape=18) +
geom_smooth(se = FALSE)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1,shape=18) +
geom_smooth(method = lm, linetype = "dashed",
color = "red")
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1,shape=18) +
geom_smooth(method = lm, linetype = "dashed",
color = "red", fill = "green")
dataset$cyl=as.factor(dataset$cyl)
dataset$cyl
dataset$cyl=as.factor(dataset$cyl)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point()
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl)) +
geom_point()
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl, colour = cyl)) +
geom_point()
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl, colour = cyl, size = cyl)) +
geom_point()
install.packages("ggplot2")
